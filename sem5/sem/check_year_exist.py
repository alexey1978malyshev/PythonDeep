'''üìå –°–æ–∑–¥–∞–π—Ç–µ –º–æ–¥—É–ª—å –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –Ω—ë–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è
–ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY
üìå –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ç–∏–Ω—É, –µ—Å–ª–∏ –¥–∞—Ç–∞ –º–æ–∂–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å
–∏–ª–∏ –ª–æ–∂—å, –µ—Å–ª–∏ —Ç–∞–∫–∞—è –¥–∞—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.
üìå –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –¥–æ–≥–æ–≤–æ—Ä–∏–º—Å—è, —á—Ç–æ –≥–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
[1, 9999].
üìå –í–µ—Å—å –ø–µ—Ä–∏–æ–¥ (1 —è–Ω–≤–∞—Ä—è 1 –≥–æ–¥–∞ - 31 –¥–µ–∫–∞–±—Ä—è 9999 –≥–æ–¥–∞)
–¥–µ–π—Å—Ç–≤—É–µ—Ç –ì—Ä–∏–≥–æ—Ä–∏–∞–Ω—Å–∫–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å.
üìå –ü—Ä–æ–≤–µ—Ä–∫—É –≥–æ–¥–∞ –Ω–∞ –≤–∏—Å–æ–∫–æ—Å–Ω–æ—Å—Ç—å –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é
–∑–∞—â–∏—â—ë–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.'''

# __all__ = ['true_data', 'my_data']

# my_data = '01.0.2024'


# def _year_funk(year):
#     if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0:
#         print('–ì–æ–¥ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π.')
#         return False
#     else:
#         print('–ì–æ–¥ –Ω–µ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π.')
#         return True


# def true_data(data):
#     day, month, year = [int(el) for el in data.split('.')]
#     if year > 9999 or month > 12:
#         return False
#     month_30 = (4, 6, 9, 11)
#     month_31 = (1, 3, 5, 7, 8, 10, 12)
#     if month in month_30:
#         if 0 < day < 31:
#             return True
#         return False
#     elif month in month_31:
#         if 0 < day < 32:
#             return True
#         return False
#     elif month == 2:
#         if _year_funk(year):
#             if 0 < day < 29:
#                 return True
#         return False
#     else:
#         if 0 < day < 30:
#             return True
#         return False


# print(true_data(my_data))





from sys import argv

def is_leap(year: int) :
    return not (year % 4 != 0 or (year % 100 == 0 and year % 400 != 0))

def valid(full_date: str) :
    date, month, year = (int(item) for item in full_date.split('.'))
    if year < 1 or year > 9999 or month < 1 or month > 12 or date < 1 or date > 31:
        return False
    if month in (4, 6, 9, 11) and date > 30:
        return False
    if month == 2 and is_leap(year) and date > 29:
        return False
    if month == 2 and not is_leap(year) and date > 28:
        return False
    return True

if len(argv) > 1:
    print(valid(argv[1]))
else:
    print(valid(date_to_prove ))



'''–°–æ–∑–¥–∞–π—Ç–µ –ø–∞–∫–µ—Ç —Å –≤—Å–µ–º–∏ –º–æ–¥—É–ª—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Å–æ–∑–¥–∞–ª–∏ –∑–∞
–≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏—è.
üìå –î–æ–±–∞–≤—å—Ç–µ –≤ __init__ –ø–∞–∫–µ—Ç–∞ –∏–º–µ–Ω–∞ –º–æ–¥—É–ª–µ–π –≤–Ω—É—Ç—Ä–∏ –¥–∞–Ω–¥–µ—Ä
__all__.
üìå –í –º–æ–¥—É–ª—è—Ö —Å–æ–∑–¥–∞–π—Ç–µ –¥–∞–Ω–¥–µ—Ä __all__ –∏ —É–∫–∞–∂–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ
—Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–µ—Ä–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏
–º–æ–¥—É–ª—è.'''